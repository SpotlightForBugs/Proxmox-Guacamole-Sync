# Auto-merge PRs from DeepSource autofix bot
# This workflow automatically merges code quality improvements from DeepSource
# Only PRs from the deepsource-autofix[bot] user will be processed

name: Auto-merge DeepSource PRs

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-merge-deepsource:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.user.login == 'deepsource-autofix[bot]' }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up GitHub CLI
        uses: cli/gh-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify PR author
        run: |
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"
          echo "PR Author: $PR_AUTHOR"
          if [[ "$PR_AUTHOR" != "deepsource-autofix[bot]" ]]; then
            echo "PR is not from DeepSource bot, skipping"
            exit 1
          fi

      - name: Wait until PR is mergeable
        run: |
          echo "Waiting for PR to become mergeable (up to 5m)..."
          timeout=300
          while [ $timeout -gt 0 ]; do
            STATUS=$(gh pr view ${{ github.event.pull_request.number }} --json mergeable,mergeStateStatus --jq '.mergeable + "|" + .mergeStateStatus') || STATUS=""
            echo "PR status: $STATUS"
            if [[ "$STATUS" == *"MERGEABLE"* ]] && [[ "$STATUS" == *"CLEAN"* ]]; then
              echo "PR ready to merge"
              break
            fi
            sleep 10
            timeout=$((timeout - 10))
          done
          if [ $timeout -le 0 ]; then
            echo "Timeout waiting for PR to be mergeable"
            exit 1
          fi

      - name: Enable native auto-merge (or merge immediately if allowed)
        run: |
          echo "Enabling auto-merge / merging PR #${{ github.event.pull_request.number }}"
          gh pr merge ${{ github.event.pull_request.number }} --auto --merge || (echo "Failed to enable auto-merge; attempting direct merge" && gh pr merge ${{ github.event.pull_request.number }} --merge)

      - name: Clean up merged branch
        run: |
          BRANCH_NAME=$(gh pr view ${{ github.event.pull_request.number }} --json headRefName --jq '.headRefName')
          echo "Branch: $BRANCH_NAME"
          if [[ "$BRANCH_NAME" != "main" && "$BRANCH_NAME" != "master" && "$BRANCH_NAME" == *"deepsource"* ]]; then
            echo "Deleting branch: $BRANCH_NAME"
            git push origin --delete "$BRANCH_NAME" || echo "Branch may have been already deleted"
          else
            echo "Skipping branch deletion for: $BRANCH_NAME"
          fi